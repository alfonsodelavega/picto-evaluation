pre {
	var emfTool : new Native("org.eclipse.epsilon.emc.emf.tools.EmfTool");
	emfTool.eCoreUtil.resolveAll(M.resource.resourceSet);
	var classes = EClass.all.select(c | c.ePackage.name <> "ecore").sortBy(c|c.name);
}

/*
rule Barchart {
	
	parameters : Map {
		"classes" = classes
	}
	
	template: "barchart.egl"
	
	target: "../gen/" + modelName + "/barchart.html" 
	
}


rule ClassDiagram {
	
	parameters : Map {
		"mainClassName" = "",
		"classNames" = EClass.all.name, 
		"format" = "graphviz-dot",
		"path" = List{"Model", "(All Classes)"},
		"icon" = "diagram-ff0000",
		"layers" = Sequence {
			Map {"id"="documentation", "title"="Documentation", "active"=false},
			Map {"id"="constraintDescriptions", "title"="Constraint descriptions", "active"=false},
			Map {"id"="constraintNames", "title"="Constraint names", "active"=false},
			Map {"id"="features", "title"="Features"},
			Map {"id"="inlineReferences", "title"="Inline references", "active"=false},
			Map {"id"="referenceLabels", "title"="Reference labels", "active"=false},
			Map {"id"="derived", "title"="Derived features", "active"=false},
			Map {"id"="inherited", "title"="Inherited features", "active"=false}
		}
	}
	
	template: "classdiagram.egl"
	
	target: "../gen/" + modelName + "/allClasses.html"
	
}


rule Ecore23D {
	
	parameters : Map {
		"classes" = classes
	}
	
	template: "3d.egl"
	
	target: "../gen/" + modelName + "/3dmodel.html" 
	
}
*/

rule EClass2ClassDiagram 
	transform c : EClass in: classes {
	
	parameters : Map {
			"mainClassName" = c.name,
			"allClasses" = classes,
			"classNames" = Sequence{},
			"format" = "graphviz-dot",
			"icon" = "diagram-fffbd7",
			"layers" = Sequence {
				Map {"id"="documentation", "title"="Documentation"},
				Map {"id"="constraintDescriptions", "title"="Constraint descriptions"},
				Map {"id"="constraintNames", "title"="Constraint names"},
				Map {"id"="features", "title"="Features"},
				Map {"id"="inlineReferences", "title"="Inline references"},
				Map {"id"="referenceLabels", "title"="Reference labels"},
				Map {"id"="subtypes", "title"="Subtypes", "active"=false},
				Map {"id"="supertypes", "title"="Supertypes"},
				Map {"id"="derived", "title"="Derived features", "active"=false},
				Map {"id"="inherited", "title"="Inherited features", "active"=false}
			}
	}
	
	template: "classdiagram.egl"
	
	target: "../gen/" + modelName + "/classes/" + classes.indexOf(c) + "-" + c.name + ".dot"
	
}

post {
	if (parallelExecution) {
		parallelDot2html(classes.collect(c | "./gen/" + modelName + "/classes/" + 
				classes.indexOf(c) + "-" + c.name + ".dot"));
	}
	else {
		for (c in classes) {
			dot2html("./gen/" + modelName + "/classes/" + 
					classes.indexOf(c) + "-" + c.name + ".dot");
		}
	}
}
